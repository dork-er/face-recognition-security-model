{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{useNavigate}from'react-router-dom';import{toast}from'react-hot-toast';// Import toast for alerts\nimport'../styles/profile.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Profile=()=>{const[userData,setUserData]=useState({username:'',email:'',profileImage:'/images/avatar.png'});const[passwordData,setPasswordData]=useState({password:'',confirmPassword:''});const[originalData,setOriginalData]=useState({});// Store original data\nconst navigate=useNavigate();useEffect(()=>{const fetchUserData=async()=>{try{const token=localStorage.getItem('token');const response=await axios.get('http://localhost:5000/user/profile',{headers:{Authorization:token?`Bearer ${token}`:''}});setUserData(response.data);setOriginalData(response.data);// Initialize original data\n}catch(error){console.error('Error fetching user data:',error);}};fetchUserData();},[]);const handleUpdatePersonalInfo=async e=>{e.preventDefault();// Filter out unchanged fields\nconst updatedFields={};Object.keys(userData).forEach(key=>{if(userData[key]!==originalData[key]){updatedFields[key]=userData[key];}});if(Object.keys(updatedFields).length===0){return toast('No changes detected',{icon:'⚠️'});}try{const token=localStorage.getItem('token');// Check for unique email and username\nconst uniqueCheckResponse=await axios.post('http://localhost:5000/user/validate',{username:userData.username,email:userData.email},{headers:{Authorization:`Bearer ${token}`}});if(!uniqueCheckResponse.data.isUnique){return toast.error('Username or email is already in use');}// Proceed to update only the changed fields\nawait axios.put('http://localhost:5000/user/profile/update',updatedFields,{headers:{Authorization:`Bearer ${token}`}});toast.success('Profile updated successfully!');setOriginalData(userData);// Update original data\n}catch(error){console.error('Error updating profile info:',error);toast.error('Failed to update profile info');}};const handleUpdateSecurityInfo=async e=>{e.preventDefault();if(passwordData.password.length<6){return toast.error('Password should be at least 6 characters long');}if(passwordData.password!==passwordData.confirmPassword){return toast.error('Passwords do not match!');}try{const token=localStorage.getItem('token');await axios.put('http://localhost:5000/user/profile/security',{password:passwordData.password},{headers:{Authorization:`Bearer ${token}`}});toast.success('Password updated successfully!');setPasswordData({password:'',confirmPassword:''});}catch(error){console.error('Error updating password:',error);toast.error('Failed to update password');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"profile-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"profile-header\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(-1),className:\"back-button\",children:\"\\u2190\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"User Profile\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-card cards\",children:[/*#__PURE__*/_jsx(\"img\",{src:userData.profileImage,alt:\"Profile\",className:\"profile-avatar\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:userData.username}),/*#__PURE__*/_jsx(\"p\",{children:userData.email})]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"edit-button\",children:\"Change Picture \\u270E\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-info-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"profile-info cards\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleUpdatePersonalInfo,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Personal Information\"}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Username:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:userData.username,onChange:e=>setUserData({...userData,username:e.target.value})})]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:userData.email,onChange:e=>setUserData({...userData,email:e.target.value})})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"update-button\",children:\"Update \\u270E\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"security-info cards\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleUpdateSecurityInfo,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Security\"}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"New password\",value:passwordData.password,onChange:e=>setPasswordData({...passwordData,password:e.target.value})})]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Confirm Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Confirm password\",value:passwordData.confirmPassword,onChange:e=>setPasswordData({...passwordData,confirmPassword:e.target.value})})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"update-button\",children:\"Update \\u270E\"})]})})]})]});};export default Profile;","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","toast","jsx","_jsx","jsxs","_jsxs","Profile","userData","setUserData","username","email","profileImage","passwordData","setPasswordData","password","confirmPassword","originalData","setOriginalData","navigate","fetchUserData","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","handleUpdatePersonalInfo","e","preventDefault","updatedFields","Object","keys","forEach","key","length","icon","uniqueCheckResponse","post","isUnique","put","success","handleUpdateSecurityInfo","className","children","onClick","src","alt","type","onSubmit","value","onChange","target","placeholder"],"sources":["C:/Users/sangm/Documents/face-recognition/client/src/components/profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-hot-toast'; // Import toast for alerts\nimport '../styles/profile.css';\n\nconst Profile = () => {\n  const [userData, setUserData] = useState({\n    username: '',\n    email: '',\n    profileImage: '/images/avatar.png',\n  });\n  const [passwordData, setPasswordData] = useState({\n    password: '',\n    confirmPassword: '',\n  });\n  const [originalData, setOriginalData] = useState({}); // Store original data\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:5000/user/profile', {\n          headers: { Authorization: token ? `Bearer ${token}` : '' },\n        });\n        setUserData(response.data);\n        setOriginalData(response.data); // Initialize original data\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    };\n    fetchUserData();\n  }, []);\n\n  const handleUpdatePersonalInfo = async (e) => {\n    e.preventDefault();\n\n    // Filter out unchanged fields\n    const updatedFields = {};\n    Object.keys(userData).forEach((key) => {\n      if (userData[key] !== originalData[key]) {\n        updatedFields[key] = userData[key];\n      }\n    });\n\n    if (Object.keys(updatedFields).length === 0) {\n      return toast('No changes detected', { icon: '⚠️' });\n    }\n\n    try {\n      const token = localStorage.getItem('token');\n\n      // Check for unique email and username\n      const uniqueCheckResponse = await axios.post(\n        'http://localhost:5000/user/validate',\n        { username: userData.username, email: userData.email },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      if (!uniqueCheckResponse.data.isUnique) {\n        return toast.error('Username or email is already in use');\n      }\n\n      // Proceed to update only the changed fields\n      await axios.put(\n        'http://localhost:5000/user/profile/update',\n        updatedFields,\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      toast.success('Profile updated successfully!');\n      setOriginalData(userData); // Update original data\n    } catch (error) {\n      console.error('Error updating profile info:', error);\n      toast.error('Failed to update profile info');\n    }\n  };\n\n  const handleUpdateSecurityInfo = async (e) => {\n    e.preventDefault();\n\n    if (passwordData.password.length < 6) {\n      return toast.error('Password should be at least 6 characters long');\n    }\n    if (passwordData.password !== passwordData.confirmPassword) {\n      return toast.error('Passwords do not match!');\n    }\n\n    try {\n      const token = localStorage.getItem('token');\n      await axios.put(\n        'http://localhost:5000/user/profile/security',\n        { password: passwordData.password },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      toast.success('Password updated successfully!');\n      setPasswordData({ password: '', confirmPassword: '' });\n    } catch (error) {\n      console.error('Error updating password:', error);\n      toast.error('Failed to update password');\n    }\n  };\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-header\">\n        <button onClick={() => navigate(-1)} className=\"back-button\">\n          ←\n        </button>\n        <h2>User Profile</h2>\n      </div>\n      <div className=\"profile-card cards\">\n        <img\n          src={userData.profileImage}\n          alt=\"Profile\"\n          className=\"profile-avatar\"\n        />\n        <div>\n          <h3>{userData.username}</h3>\n          <p>{userData.email}</p>\n        </div>\n        <button type=\"button\" className=\"edit-button\">\n          Change Picture ✎\n        </button>\n      </div>\n      <div className=\"profile-info-section\">\n        <div className=\"profile-info cards\">\n          <form onSubmit={handleUpdatePersonalInfo}>\n            <h4>Personal Information</h4>\n            <label>\n              <h5>Username:</h5>\n              <input\n                type=\"text\"\n                value={userData.username}\n                onChange={(e) =>\n                  setUserData({ ...userData, username: e.target.value })\n                }\n              />\n            </label>\n            <label>\n              <h5>Email:</h5>\n              <input\n                type=\"email\"\n                value={userData.email}\n                onChange={(e) =>\n                  setUserData({ ...userData, email: e.target.value })\n                }\n              />\n            </label>\n            <button type=\"submit\" className=\"update-button\">\n              Update ✎\n            </button>\n          </form>\n        </div>\n        <div className=\"security-info cards\">\n          <form onSubmit={handleUpdateSecurityInfo}>\n            <h4>Security</h4>\n            <label>\n              <h5>Password:</h5>\n              <input\n                type=\"password\"\n                placeholder=\"New password\"\n                value={passwordData.password}\n                onChange={(e) =>\n                  setPasswordData({ ...passwordData, password: e.target.value })\n                }\n              />\n            </label>\n            <label>\n              <h5>Confirm Password:</h5>\n              <input\n                type=\"password\"\n                placeholder=\"Confirm password\"\n                value={passwordData.confirmPassword}\n                onChange={(e) =>\n                  setPasswordData({\n                    ...passwordData,\n                    confirmPassword: e.target.value,\n                  })\n                }\n              />\n            </label>\n            <button type=\"submit\" className=\"update-button\">\n              Update ✎\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}