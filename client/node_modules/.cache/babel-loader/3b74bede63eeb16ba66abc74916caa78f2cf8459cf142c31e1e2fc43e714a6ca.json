{"ast":null,"code":"import React,{useState}from'react';import'../styles/signUp.css';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SignUp=()=>{const[formData,setFormData]=useState({username:'',email:'',password:'',confirmPassword:'',rememberMe:false,agreeToTerms:false});const[formErrors,setFormErrors]=useState({username:'',email:'',password:'',confirmPassword:'',agreeToTerms:''});const[success,setSuccess]=useState('');const[showImageUpload,setShowImageUpload]=useState(false);const[imageFile,setImageFile]=useState(null);const[imageUploadSuccess,setImageUploadSuccess]=useState('');const navigate=useNavigate();const validateField=(name,value)=>{let errorMessage='';switch(name){case'username':if(value.length<3)errorMessage='Username must be at least 3 characters long.';break;case'email':const emailRegex=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;if(!emailRegex.test(value))errorMessage='Please enter a valid email address.';break;case'password':const passwordRegex=/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;if(!passwordRegex.test(value))errorMessage='Password must be 8+ characters, with an uppercase, lowercase, and a number.';break;case'confirmPassword':if(value!==formData.password)errorMessage='Passwords do not match.';break;default:break;}setFormErrors(prevErrors=>({...prevErrors,[name]:errorMessage}));};const checkAvailability=async(field,value)=>{if(!value)return;try{const response=await fetch('http://localhost:5000/auth/checkAvailability',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({[field]:value})});if(response.status===409){const data=await response.json();setFormErrors(prevErrors=>({...prevErrors,[field]:data.message}));}else{setFormErrors(prevErrors=>({...prevErrors,[field]:''}));}}catch(error){console.error(`Error checking ${field} availability:`,error);}};const handleChange=e=>{const{name,value,type,checked}=e.target;const fieldValue=type==='checkbox'?checked:value;setFormData(prevData=>({...prevData,[name]:fieldValue}));// Trigger validation and availability checks on field change\nvalidateField(name,fieldValue);if(name==='username'||name==='email'){checkAvailability(name,fieldValue);}};const handleSubmit=async event=>{event.preventDefault();// Ensure no remaining validation errors\nfor(const field in formData){validateField(field,formData[field]);}if(Object.values(formErrors).some(error=>error))return;const{username,email,password}=formData;setSuccess('');// Clear any previous success message\ntry{const response=await fetch('http://localhost:5000/auth/signup',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username,email,password})});if(response.ok){const data=await response.json();setSuccess(data.message);// Display success message\nsetShowImageUpload(true);// Proceed to image upload\n}else{const errorData=await response.json();setFormErrors(prevErrors=>({...prevErrors,submit:errorData.error||'Signup failed'}));}}catch(error){console.error('Error:',error);setFormErrors(prevErrors=>({...prevErrors,submit:'Signup failed. Please try again later.'}));}};const handleImageChange=e=>{setImageFile(e.target.files[0]);};const handleImageUpload=async function(){let skipImage=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;if(skipImage||!imageFile){await saveImageId('/images/avatar.png');navigate('/login');// Redirect after skipping image\nreturn;}const formData=new FormData();formData.append('image',imageFile);try{const response=await fetch('http://localhost:5000/user/uploadImage',{method:'POST',body:formData});if(response.ok){const data=await response.json();await saveImageId(data.imageID);setImageUploadSuccess('Image uploaded successfully!');setFormData({username:'',email:'',password:'',confirmPassword:'',rememberMe:false,agreeToTerms:false});setFormErrors({});navigate('/login');// Redirect after upload\n}else{setImageUploadSuccess('Image upload failed.');await saveImageId('/images/avatar.png');// Use default avatar if upload fails\nnavigate('/login');// Redirect after failure\n}}catch(error){await saveImageId('/images/avatar.png');// Use default avatar on error\nnavigate('/login');}};const saveImageId=async imageId=>{try{await fetch('http://localhost:5000/user/updateImageId',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:formData.email,image_id:imageId})});}catch(error){console.error('Error updating user image ID:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"signup-page\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"/images/bionicRobot.png\",alt:\"robot\",className:\"background-image\"}),/*#__PURE__*/_jsx(\"img\",{src:\"/images/backgroundSignup.jpg\",alt:\"background\",className:\"background-cover\"}),/*#__PURE__*/_jsx(\"img\",{src:\"/images/friendlyRobot.png\",alt:\"robot\",className:\"robot-image\"}),!showImageUpload?/*#__PURE__*/_jsxs(\"div\",{className:\"signup-form-container\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"signup-title\",children:\"Register\"}),/*#__PURE__*/_jsx(\"p\",{className:\"signup-subtitle\",children:\"Create your new account.\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"username\",placeholder:\"Username\",value:formData.username,onChange:handleChange,required:true}),formErrors.username&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:formErrors.username}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",placeholder:\"Email address\",value:formData.email,onChange:handleChange,required:true}),formErrors.email&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:formErrors.email}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",placeholder:\"Password\",value:formData.password,onChange:handleChange,required:true}),formErrors.password&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:formErrors.password}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"confirmPassword\",placeholder:\"Confirm Password\",value:formData.confirmPassword,onChange:handleChange,required:true}),formErrors.confirmPassword&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:formErrors.confirmPassword}),/*#__PURE__*/_jsx(\"div\",{className:\"checkbox-group\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"checkBoxes\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",name:\"agreeToTerms\",checked:formData.agreeToTerms,onChange:handleChange,required:true}),\"I agree to the terms and conditions\"]})}),formErrors.agreeToTerms&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:formErrors.agreeToTerms}),formErrors.submit&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:formErrors.submit}),success&&/*#__PURE__*/_jsx(\"p\",{className:\"success-message\",children:success}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"signup-button\",children:\"Sign Up\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"login-link\",children:[\"Already have an account? \",/*#__PURE__*/_jsx(\"a\",{href:\"/login\",children:\"Log In\"})]})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"signup-form-container image-upload-container\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"signup-title\",children:\"Upload Profile Image\"}),/*#__PURE__*/_jsx(\"p\",{className:\"signup-subtitle\",children:\"Upload a profile image to personalize your account.\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:handleImageChange,accept:\"image/*\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleImageUpload(false),children:\"Upload Image\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleImageUpload(true),children:\"Skip\"}),imageUploadSuccess&&/*#__PURE__*/_jsx(\"p\",{className:\"success-message\",children:imageUploadSuccess})]})]});};export default SignUp;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","SignUp","formData","setFormData","username","email","password","confirmPassword","rememberMe","agreeToTerms","formErrors","setFormErrors","success","setSuccess","showImageUpload","setShowImageUpload","imageFile","setImageFile","imageUploadSuccess","setImageUploadSuccess","navigate","validateField","name","value","errorMessage","length","emailRegex","test","passwordRegex","prevErrors","checkAvailability","field","response","fetch","method","headers","body","JSON","stringify","status","data","json","message","error","console","handleChange","e","type","checked","target","fieldValue","prevData","handleSubmit","event","preventDefault","Object","values","some","ok","errorData","submit","handleImageChange","files","handleImageUpload","skipImage","arguments","undefined","saveImageId","FormData","append","imageID","imageId","image_id","className","children","src","alt","onSubmit","placeholder","onChange","required","href","accept","onClick"],"sources":["C:/Users/sangm/Documents/face-recognition/client/src/components/signUp.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/signUp.css';\nimport { useNavigate } from 'react-router-dom';\n\nconst SignUp = () => {\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    rememberMe: false,\n    agreeToTerms: false,\n  });\n  const [formErrors, setFormErrors] = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    agreeToTerms: '',\n  });\n  const [success, setSuccess] = useState('');\n  const [showImageUpload, setShowImageUpload] = useState(false);\n  const [imageFile, setImageFile] = useState(null);\n  const [imageUploadSuccess, setImageUploadSuccess] = useState('');\n  const navigate = useNavigate();\n\n  const validateField = (name, value) => {\n    let errorMessage = '';\n\n    switch (name) {\n      case 'username':\n        if (value.length < 3)\n          errorMessage = 'Username must be at least 3 characters long.';\n        break;\n      case 'email':\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailRegex.test(value))\n          errorMessage = 'Please enter a valid email address.';\n        break;\n      case 'password':\n        const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;\n        if (!passwordRegex.test(value))\n          errorMessage =\n            'Password must be 8+ characters, with an uppercase, lowercase, and a number.';\n        break;\n      case 'confirmPassword':\n        if (value !== formData.password)\n          errorMessage = 'Passwords do not match.';\n        break;\n      default:\n        break;\n    }\n\n    setFormErrors((prevErrors) => ({\n      ...prevErrors,\n      [name]: errorMessage,\n    }));\n  };\n\n  const checkAvailability = async (field, value) => {\n    if (!value) return;\n\n    try {\n      const response = await fetch(\n        'http://localhost:5000/auth/checkAvailability',\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ [field]: value }),\n        }\n      );\n\n      if (response.status === 409) {\n        const data = await response.json();\n        setFormErrors((prevErrors) => ({\n          ...prevErrors,\n          [field]: data.message,\n        }));\n      } else {\n        setFormErrors((prevErrors) => ({\n          ...prevErrors,\n          [field]: '',\n        }));\n      }\n    } catch (error) {\n      console.error(`Error checking ${field} availability:`, error);\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    const fieldValue = type === 'checkbox' ? checked : value;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: fieldValue,\n    }));\n\n    // Trigger validation and availability checks on field change\n    validateField(name, fieldValue);\n    if (name === 'username' || name === 'email') {\n      checkAvailability(name, fieldValue);\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    // Ensure no remaining validation errors\n    for (const field in formData) {\n      validateField(field, formData[field]);\n    }\n    if (Object.values(formErrors).some((error) => error)) return;\n\n    const { username, email, password } = formData;\n    setSuccess(''); // Clear any previous success message\n\n    try {\n      const response = await fetch('http://localhost:5000/auth/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, email, password }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setSuccess(data.message); // Display success message\n        setShowImageUpload(true); // Proceed to image upload\n      } else {\n        const errorData = await response.json();\n        setFormErrors((prevErrors) => ({\n          ...prevErrors,\n          submit: errorData.error || 'Signup failed',\n        }));\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setFormErrors((prevErrors) => ({\n        ...prevErrors,\n        submit: 'Signup failed. Please try again later.',\n      }));\n    }\n  };\n\n  const handleImageChange = (e) => {\n    setImageFile(e.target.files[0]);\n  };\n\n  const handleImageUpload = async (skipImage = false) => {\n    if (skipImage || !imageFile) {\n      await saveImageId('/images/avatar.png');\n      navigate('/login'); // Redirect after skipping image\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('image', imageFile);\n\n    try {\n      const response = await fetch('http://localhost:5000/user/uploadImage', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        await saveImageId(data.imageID);\n        setImageUploadSuccess('Image uploaded successfully!');\n        setFormData({\n          username: '',\n          email: '',\n          password: '',\n          confirmPassword: '',\n          rememberMe: false,\n          agreeToTerms: false,\n        });\n        setFormErrors({});\n        navigate('/login'); // Redirect after upload\n      } else {\n        setImageUploadSuccess('Image upload failed.');\n        await saveImageId('/images/avatar.png'); // Use default avatar if upload fails\n        navigate('/login'); // Redirect after failure\n      }\n    } catch (error) {\n      await saveImageId('/images/avatar.png'); // Use default avatar on error\n      navigate('/login');\n    }\n  };\n\n  const saveImageId = async (imageId) => {\n    try {\n      await fetch('http://localhost:5000/user/updateImageId', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email: formData.email, image_id: imageId }),\n      });\n    } catch (error) {\n      console.error('Error updating user image ID:', error);\n    }\n  };\n\n  return (\n    <div className=\"signup-page\">\n      <img\n        src=\"/images/bionicRobot.png\"\n        alt=\"robot\"\n        className=\"background-image\"\n      ></img>\n      <img\n        src=\"/images/backgroundSignup.jpg\"\n        alt=\"background\"\n        className=\"background-cover\"\n      ></img>\n      <img\n        src=\"/images/friendlyRobot.png\"\n        alt=\"robot\"\n        className=\"robot-image\"\n      ></img>\n      {!showImageUpload ? (\n        <div className=\"signup-form-container\">\n          <h2 className=\"signup-title\">Register</h2>\n          <p className=\"signup-subtitle\">Create your new account.</p>\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Username\"\n              value={formData.username}\n              onChange={handleChange}\n              required\n            />\n            {formErrors.username && (\n              <p className=\"error-message\">{formErrors.username}</p>\n            )}\n\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email address\"\n              value={formData.email}\n              onChange={handleChange}\n              required\n            />\n            {formErrors.email && (\n              <p className=\"error-message\">{formErrors.email}</p>\n            )}\n\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              value={formData.password}\n              onChange={handleChange}\n              required\n            />\n            {formErrors.password && (\n              <p className=\"error-message\">{formErrors.password}</p>\n            )}\n\n            <input\n              type=\"password\"\n              name=\"confirmPassword\"\n              placeholder=\"Confirm Password\"\n              value={formData.confirmPassword}\n              onChange={handleChange}\n              required\n            />\n            {formErrors.confirmPassword && (\n              <p className=\"error-message\">{formErrors.confirmPassword}</p>\n            )}\n\n            <div className=\"checkbox-group\">\n              <label className=\"checkBoxes\">\n                <input\n                  type=\"checkbox\"\n                  name=\"agreeToTerms\"\n                  checked={formData.agreeToTerms}\n                  onChange={handleChange}\n                  required\n                />\n                I agree to the terms and conditions\n              </label>\n            </div>\n            {formErrors.agreeToTerms && (\n              <p className=\"error-message\">{formErrors.agreeToTerms}</p>\n            )}\n\n            {formErrors.submit && (\n              <p className=\"error-message\">{formErrors.submit}</p>\n            )}\n            {success && <p className=\"success-message\">{success}</p>}\n\n            <button type=\"submit\" className=\"signup-button\">\n              Sign Up\n            </button>\n            <p className=\"login-link\">\n              Already have an account? <a href=\"/login\">Log In</a>\n            </p>\n          </form>\n        </div>\n      ) : (\n        <div className=\"signup-form-container image-upload-container\">\n          <h2 className=\"signup-title\">Upload Profile Image</h2>\n          <p className=\"signup-subtitle\">\n            Upload a profile image to personalize your account.\n          </p>\n          <input type=\"file\" onChange={handleImageChange} accept=\"image/*\" />\n          <button onClick={() => handleImageUpload(false)}>Upload Image</button>\n          <button onClick={() => handleImageUpload(true)}>Skip</button>\n          {imageUploadSuccess && (\n            <p className=\"success-message\">{imageUploadSuccess}</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SignUp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}