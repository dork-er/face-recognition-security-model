{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sangm\\\\Documents\\\\face-recognition\\\\client\\\\src\\\\components\\\\profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/profile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [userData, setUserData] = useState({\n    username: '',\n    email: '',\n    profileImage: '/images/avatar.png'\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  const [isUpdatingPassword, setIsUpdatingPassword] = useState(false);\n  const [passwordData, setPasswordData] = useState({\n    password: '',\n    confirmPassword: ''\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:5000/user/profile', {\n          headers: {\n            Authorization: token ? `Bearer ${token}` : ''\n          }\n        });\n        setUserData(response.data);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    };\n    fetchUserData();\n  }, []);\n  const validateField = (name, value) => {\n    let errorMessage = '';\n    switch (name) {\n      case 'username':\n        if (value.length < 3) errorMessage = 'Username must be at least 3 characters long.';\n        break;\n      case 'email':\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailRegex.test(value)) errorMessage = 'Please enter a valid email address.';\n        break;\n      case 'password':\n        const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;\n        if (!passwordRegex.test(value)) errorMessage = 'Password must be 8+ characters, with an uppercase, lowercase, and a number.';\n        break;\n      case 'confirmPassword':\n        if (value !== formData.password) errorMessage = 'Passwords do not match.';\n        break;\n      default:\n        break;\n    }\n    setFormErrors(prevErrors => ({\n      ...prevErrors,\n      [name]: errorMessage\n    }));\n  };\n  const handleUpdatePersonalInfo = async e => {\n    e.preventDefault();\n\n    // Check if the username or email has changed\n    if (userData.username === '' || userData.email === '') {\n      return alert('Username and Email cannot be empty.');\n    }\n    try {\n      const token = localStorage.getItem('token');\n\n      // Check for unique email and username\n      const uniqueCheckResponse = await axios.post('http://localhost:5000/user/validate', {\n        username: userData.username,\n        email: userData.email\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!uniqueCheckResponse.data.isUnique) {\n        return alert('Username or email is already in use.');\n      }\n\n      // Proceed to update user info\n      await axios.put('http://localhost:5000/user/profile/update', {\n        username: userData.username,\n        email: userData.email\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('Profile updated successfully!');\n      setIsEditing(false);\n    } catch (error) {\n      console.error('Error updating profile info:', error);\n      alert('Failed to update profile info.');\n    }\n  };\n  const handleUpdateSecurityInfo = async e => {\n    e.preventDefault();\n\n    // Password validation\n    if (passwordData.password.length < 6) {\n      return alert('Password should be at least 6 characters long.');\n    }\n    if (passwordData.password !== passwordData.confirmPassword) {\n      return alert('Passwords do not match!');\n    }\n    try {\n      const token = localStorage.getItem('token');\n      await axios.put('http://localhost:5000/user/profile/security', {\n        password: passwordData.password\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('Password updated successfully!');\n      setIsUpdatingPassword(false);\n      setPasswordData({\n        password: '',\n        confirmPassword: ''\n      });\n    } catch (error) {\n      console.error('Error updating password:', error);\n      alert('Failed to update password.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(-1),\n        className: \"back-button\",\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-card cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: userData.profileImage,\n        alt: \"Profile\",\n        className: \"profile-avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: userData.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: userData.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"edit-button\",\n        children: \"Change Picture \\u270E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-info-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-info cards\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleUpdatePersonalInfo,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Personal Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: userData.username,\n              onChange: e => setUserData({\n                ...userData,\n                username: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              value: userData.email,\n              onChange: e => setUserData({\n                ...userData,\n                email: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"update-button\",\n            children: \"Update \\u270E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"security-info cards\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleUpdateSecurityInfo,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Security\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"New password\",\n              value: passwordData.password,\n              onChange: e => setPasswordData({\n                ...passwordData,\n                password: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Confirm Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Confirm password\",\n              value: passwordData.confirmPassword,\n              onChange: e => setPasswordData({\n                ...passwordData,\n                confirmPassword: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"update-button\",\n            children: \"Update \\u270E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"LSbRxxIGgxLnrbpOnZxkl6gR89U=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Profile","_s","userData","setUserData","username","email","profileImage","isEditing","setIsEditing","isUpdatingPassword","setIsUpdatingPassword","passwordData","setPasswordData","password","confirmPassword","navigate","fetchUserData","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","validateField","name","value","errorMessage","length","emailRegex","test","passwordRegex","formData","setFormErrors","prevErrors","handleUpdatePersonalInfo","e","preventDefault","alert","uniqueCheckResponse","post","isUnique","put","handleUpdateSecurityInfo","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","onSubmit","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/sangm/Documents/face-recognition/client/src/components/profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/profile.css';\n\nconst Profile = () => {\n  const [userData, setUserData] = useState({\n    username: '',\n    email: '',\n    profileImage: '/images/avatar.png',\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  const [isUpdatingPassword, setIsUpdatingPassword] = useState(false);\n  const [passwordData, setPasswordData] = useState({\n    password: '',\n    confirmPassword: '',\n  });\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:5000/user/profile', {\n          headers: { Authorization: token ? `Bearer ${token}` : '' },\n        });\n        setUserData(response.data);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    };\n    fetchUserData();\n  }, []);\n\n  const validateField = (name, value) => {\n    let errorMessage = '';\n\n    switch (name) {\n      case 'username':\n        if (value.length < 3)\n          errorMessage = 'Username must be at least 3 characters long.';\n        break;\n      case 'email':\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailRegex.test(value))\n          errorMessage = 'Please enter a valid email address.';\n        break;\n      case 'password':\n        const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;\n        if (!passwordRegex.test(value))\n          errorMessage =\n            'Password must be 8+ characters, with an uppercase, lowercase, and a number.';\n        break;\n      case 'confirmPassword':\n        if (value !== formData.password)\n          errorMessage = 'Passwords do not match.';\n        break;\n      default:\n        break;\n    }\n\n    setFormErrors((prevErrors) => ({\n      ...prevErrors,\n      [name]: errorMessage,\n    }));\n  };\n  const handleUpdatePersonalInfo = async (e) => {\n    e.preventDefault();\n\n    // Check if the username or email has changed\n    if (userData.username === '' || userData.email === '') {\n      return alert('Username and Email cannot be empty.');\n    }\n\n    try {\n      const token = localStorage.getItem('token');\n\n      // Check for unique email and username\n      const uniqueCheckResponse = await axios.post(\n        'http://localhost:5000/user/validate',\n        { username: userData.username, email: userData.email },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      if (!uniqueCheckResponse.data.isUnique) {\n        return alert('Username or email is already in use.');\n      }\n\n      // Proceed to update user info\n      await axios.put(\n        'http://localhost:5000/user/profile/update',\n        { username: userData.username, email: userData.email },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      alert('Profile updated successfully!');\n      setIsEditing(false);\n    } catch (error) {\n      console.error('Error updating profile info:', error);\n      alert('Failed to update profile info.');\n    }\n  };\n\n  const handleUpdateSecurityInfo = async (e) => {\n    e.preventDefault();\n\n    // Password validation\n    if (passwordData.password.length < 6) {\n      return alert('Password should be at least 6 characters long.');\n    }\n    if (passwordData.password !== passwordData.confirmPassword) {\n      return alert('Passwords do not match!');\n    }\n\n    try {\n      const token = localStorage.getItem('token');\n      await axios.put(\n        'http://localhost:5000/user/profile/security',\n        { password: passwordData.password },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      alert('Password updated successfully!');\n      setIsUpdatingPassword(false);\n      setPasswordData({ password: '', confirmPassword: '' });\n    } catch (error) {\n      console.error('Error updating password:', error);\n      alert('Failed to update password.');\n    }\n  };\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-header\">\n        <button onClick={() => navigate(-1)} className=\"back-button\">\n          ←\n        </button>\n        <h2>User Profile</h2>\n      </div>\n      <div className=\"profile-card cards\">\n        <img\n          src={userData.profileImage}\n          alt=\"Profile\"\n          className=\"profile-avatar\"\n        />\n        <div>\n          <h3>{userData.username}</h3>\n          <p>{userData.email}</p>\n        </div>\n        <button type=\"button\" className=\"edit-button\">\n          Change Picture ✎\n        </button>\n      </div>\n      <div className=\"profile-info-section\">\n        <div className=\"profile-info cards\">\n          <form onSubmit={handleUpdatePersonalInfo}>\n            <h4>Personal Information</h4>\n            <label>\n              <h5>Username:</h5>\n              <input\n                type=\"text\"\n                value={userData.username}\n                onChange={(e) =>\n                  setUserData({ ...userData, username: e.target.value })\n                }\n              />\n            </label>\n            <label>\n              <h5>Email:</h5>\n              <input\n                type=\"email\"\n                value={userData.email}\n                onChange={(e) =>\n                  setUserData({ ...userData, email: e.target.value })\n                }\n              />\n            </label>\n            <button type=\"submit\" className=\"update-button\">\n              Update ✎\n            </button>\n          </form>\n        </div>\n        <div className=\"security-info cards\">\n          <form onSubmit={handleUpdateSecurityInfo}>\n            <h4>Security</h4>\n            <label>\n              <h5>Password:</h5>\n              <input\n                type=\"password\"\n                placeholder=\"New password\"\n                value={passwordData.password}\n                onChange={(e) =>\n                  setPasswordData({ ...passwordData, password: e.target.value })\n                }\n              />\n            </label>\n            <label>\n              <h5>Confirm Password:</h5>\n              <input\n                type=\"password\"\n                placeholder=\"Confirm password\"\n                value={passwordData.confirmPassword}\n                onChange={(e) =>\n                  setPasswordData({\n                    ...passwordData,\n                    confirmPassword: e.target.value,\n                  })\n                }\n              />\n            </label>\n            <button type=\"submit\" className=\"update-button\">\n              Update ✎\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}